(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict'

module.exports = context;

function context(canvas, shaders) {
    function loadShader(gl, shaderSource, shaderType) {
        var shader = gl.createShader(shaderType);

        gl.shaderSource(shader, shaderSource);
        gl.compileShader(shader);

        return shader;
    }

    var gl = canvas.getContext('webgl') ||
             canvas.getContext('experimental-webgl');

    var program = gl.createProgram();

    for (var key in shaders) {
        if (Object.prototype.hasOwnProperty.call(shaders, key)) {

            var shaderType = key === 'vertex' ?
                gl.VERTEX_SHADER :
                gl.FRAGMENT_SHADER;

            var shader = loadShader(gl, shaders[key], shaderType)

            gl.attachShader(program, shader);
        }
    }

    gl.linkProgram(program);
    gl.useProgram(program);

    return gl;
};
},{}],2:[function(require,module,exports){
var canvas = document.body.appendChild(document.createElement('canvas'));
var shaders  = require('./shaders.js');
var gl       = require('./context.js')(canvas, shaders.shader);
},{"./context.js":1,"./shaders.js":3}],3:[function(require,module,exports){
'use strict';

var glify = undefined;

module.exports = {
    "shader": {"vertex":"precision mediump float;attribute vec4 a_position,a_color;uniform mat4 u_modelViewMatrix,u_projectionMatrix;varying vec4 a;void main(){gl_Position=u_projectionMatrix*u_modelViewMatrix*a_position;a=a_color;}","fragment":"precision mediump float;varying vec4 a;void main(){gl_FragColor=a;}"}
};
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsImphdmFzY3JpcHQvY29udGV4dC5qcyIsImphdmFzY3JpcHQvaW5kZXguanMiLCJqYXZhc2NyaXB0L3NoYWRlcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwQ0E7QUFDQTtBQUNBOztBQ0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRleHQ7XG5cbmZ1bmN0aW9uIGNvbnRleHQoY2FudmFzLCBzaGFkZXJzKSB7XG4gICAgZnVuY3Rpb24gbG9hZFNoYWRlcihnbCwgc2hhZGVyU291cmNlLCBzaGFkZXJUeXBlKSB7XG4gICAgICAgIHZhciBzaGFkZXIgPSBnbC5jcmVhdGVTaGFkZXIoc2hhZGVyVHlwZSk7XG5cbiAgICAgICAgZ2wuc2hhZGVyU291cmNlKHNoYWRlciwgc2hhZGVyU291cmNlKTtcbiAgICAgICAgZ2wuY29tcGlsZVNoYWRlcihzaGFkZXIpO1xuXG4gICAgICAgIHJldHVybiBzaGFkZXI7XG4gICAgfVxuXG4gICAgdmFyIGdsID0gY2FudmFzLmdldENvbnRleHQoJ3dlYmdsJykgfHxcbiAgICAgICAgICAgICBjYW52YXMuZ2V0Q29udGV4dCgnZXhwZXJpbWVudGFsLXdlYmdsJyk7XG5cbiAgICB2YXIgcHJvZ3JhbSA9IGdsLmNyZWF0ZVByb2dyYW0oKTtcblxuICAgIGZvciAodmFyIGtleSBpbiBzaGFkZXJzKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc2hhZGVycywga2V5KSkge1xuXG4gICAgICAgICAgICB2YXIgc2hhZGVyVHlwZSA9IGtleSA9PT0gJ3ZlcnRleCcgP1xuICAgICAgICAgICAgICAgIGdsLlZFUlRFWF9TSEFERVIgOlxuICAgICAgICAgICAgICAgIGdsLkZSQUdNRU5UX1NIQURFUjtcblxuICAgICAgICAgICAgdmFyIHNoYWRlciA9IGxvYWRTaGFkZXIoZ2wsIHNoYWRlcnNba2V5XSwgc2hhZGVyVHlwZSlcblxuICAgICAgICAgICAgZ2wuYXR0YWNoU2hhZGVyKHByb2dyYW0sIHNoYWRlcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnbC5saW5rUHJvZ3JhbShwcm9ncmFtKTtcbiAgICBnbC51c2VQcm9ncmFtKHByb2dyYW0pO1xuXG4gICAgcmV0dXJuIGdsO1xufTsiLCJ2YXIgY2FudmFzID0gZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKSk7XG52YXIgc2hhZGVycyAgPSByZXF1aXJlKCcuL3NoYWRlcnMuanMnKTtcbnZhciBnbCAgICAgICA9IHJlcXVpcmUoJy4vY29udGV4dC5qcycpKGNhbnZhcywgc2hhZGVycy5zaGFkZXIpOyIsIid1c2Ugc3RyaWN0JztcblxudmFyIGdsaWZ5ID0gdW5kZWZpbmVkO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBcInNoYWRlclwiOiB7XCJ2ZXJ0ZXhcIjpcInByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O2F0dHJpYnV0ZSB2ZWM0IGFfcG9zaXRpb24sYV9jb2xvcjt1bmlmb3JtIG1hdDQgdV9tb2RlbFZpZXdNYXRyaXgsdV9wcm9qZWN0aW9uTWF0cml4O3ZhcnlpbmcgdmVjNCBhO3ZvaWQgbWFpbigpe2dsX1Bvc2l0aW9uPXVfcHJvamVjdGlvbk1hdHJpeCp1X21vZGVsVmlld01hdHJpeCphX3Bvc2l0aW9uO2E9YV9jb2xvcjt9XCIsXCJmcmFnbWVudFwiOlwicHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7dmFyeWluZyB2ZWM0IGE7dm9pZCBtYWluKCl7Z2xfRnJhZ0NvbG9yPWE7fVwifVxufTsiXX0=
