(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict'

module.exports = {
    'positions': [
        // Row 1
        -900, -900, 0,
        -300, -900, 0,
        -900, -300, 0,
        -900, -300, 0,
        -300, -900, 0,
        -300, -300, 0,

        -300, -900, 0,
        300, -900, 0,
        -300, -300, 0,
        -300, -300, 0,
        300, -900, 0,
        300, -300, 0,

        300, -900, 0,
        900, -900, 0,
        300, -300, 0,
        300, -300, 0,
        900, -900, 0,
        900, -300, 0,

        // Row 2
        -900, -300, 0,
        -300, -300, 0,
        -900, 300, 0,
        -900, 300, 0,
        -300, -300, 0,
        -300, 300, 0,

        -300, -300, 0,
        300, -300, 0,
        -300, 300, 0,
        -300, 300, 0,
        300, -300, 0,
        300, 300, 0,

        300, -300, 0,
        900, -300, 0,
        300, 300, 0,
        300, 300, 0,
        900, -300, 0,
        900, 300, 0,

        // Row 3
        -900, 300, 0,
        -300, 300, 0,
        -900, 900, 0,
        -900, 900, 0,
        -300, 300, 0,
        -300, 900, 0,

        -300, 300, 0,
        300, 300, 0,
        -300, 900, 0,
        -300, 900, 0,
        300, 300, 0,
        300, 900, 0,

        300, 300, 0,
        900, 300, 0,
        300, 900, 0,
        300, 900, 0,
        900, 300, 0,
        900, 900, 0],

    'colors': [
        // Row 1
        10, 10, 10,
        10, 10, 10,
        10, 10, 10,
        10, 10, 10,
        10, 10, 10,
        10, 10, 10,

        40, 40, 40,
        40, 40, 40,
        40, 40, 40,
        40, 40, 40,
        40, 40, 40,
        40, 40, 40,

        70, 70, 70,
        70, 70, 70,
        70, 70, 70,
        70, 70, 70,
        70, 70, 70,
        70, 70, 70,

        // Row 2
        100, 100, 100,
        100, 100, 100,
        100, 100, 100,
        100, 100, 100,
        100, 100, 100,
        100, 100, 100,

        130, 130, 130,
        130, 130, 130,
        130, 130, 130,
        130, 130, 130,
        130, 130, 130,
        130, 130, 130,

        160, 160, 160,
        160, 160, 160,
        160, 160, 160,
        160, 160, 160,
        160, 160, 160,
        160, 160, 160,

        // Row 3
        190, 190, 190,
        190, 190, 190,
        190, 190, 190,
        190, 190, 190,
        190, 190, 190,
        190, 190, 190,

        220, 220, 220,
        220, 220, 220,
        220, 220, 220,
        220, 220, 220,
        220, 220, 220,
        220, 220, 220,

        250, 250, 250,
        250, 250, 250,
        250, 250, 250,
        250, 250, 250,
        250, 250, 250,
        250, 250, 250]
};
},{}],2:[function(require,module,exports){
"use strict"

var tileData = require('./data/tiledata.js');

$(function () {
    main();
});

var main = function () {
    // Get A WebGL context    // Get A WbGL context
    var canvas = document.getElementById("canvas");
    var gl = getWebGLContext(canvas);
    if (!gl) {
        return;
    }

    // setup GLSL program
    var program = createProgramFromScripts(gl, ["2d-vertex-shader", "2d-fragment-shader"]);
    gl.useProgram(program);

    // look up where the vertex data needs to go.
    var positionLocation = gl.getAttribLocation(program, "a_position");
    var colorLocation = gl.getAttribLocation(program, "a_color");

    // lookup uniforms
    var modelViewMatrixLocation = gl.getUniformLocation(program, "u_modelViewMatrix");
    var projectionMatrixLocation = gl.getUniformLocation(program, "u_projectionMatrix");

    // Create a buffer.
    var buffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
    gl.enableVertexAttribArray(positionLocation);
    gl.vertexAttribPointer(positionLocation, 3, gl.FLOAT, false, 0, 0);

    setTiles(gl);

    // Create a buffer for colors.
    var buffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
    gl.enableVertexAttribArray(colorLocation);
    gl.vertexAttribPointer(colorLocation, 3, gl.UNSIGNED_BYTE, true, 0, 0);

    // Set Colors.
    setColors(gl);

    var fov = Math.PI / 3;
    var cameraPosition = [0, 0, 1000];
    var target = [0, 0, 0];

    // Setup a ui.
    $("#fov").gmanSlider({ value: radToDeg(fov), slide: updateFov, min: 1, max: 179 });

    $("#cameraPositionX").gmanSlider({ value: cameraPosition[0], slide: updateCameraPosition(0), min: -1000, max: 1000 });
    $("#cameraPositionY").gmanSlider({ value: cameraPosition[1], slide: updateCameraPosition(1), min: -1000, max: 1000 });
    $("#cameraPositionZ").gmanSlider({ value: cameraPosition[2], slide: updateCameraPosition(2), min: -1000, max: 1000 });

    $("#targetX").gmanSlider({ value: target[0], slide: updateTarget(0), min: -1000, max: 1000 });
    $("#targetY").gmanSlider({ value: target[1], slide: updateTarget(1), min: -1000, max: 1000 });
    $("#targetZ").gmanSlider({ value: target[2], slide: updateTarget(2), min: -1000, max: 1000 });

    function updateFov(event, ui) {
        fov = degToRad(ui.value);
        drawScene();
    }

    function updateCameraPosition(index) {
        return function (event, ui) {
            cameraPosition[index] = ui.value;
            drawScene();
        }
    }

    function updateTarget(index) {
        return function (event, ui) {
            target[index] = ui.value;
            drawScene();
        }
    }

    function radToDeg(r) {
        return r * 180 / Math.PI;
    }

    function degToRad(d) {
        return d * Math.PI / 180;
    }

    // Draw a the scene.
    function drawScene() {
        // Clear the canvas.
        gl.clear(gl.COLOR_BUFFER_BIT);

        var aspect = canvas.clientWidth / canvas.clientHeight;

        var v = new Float32Array(3);
        vec3.subtract(v, target, cameraPosition);
        vec3.cross(v, v, [0, 0, 1]);

        var up = vec3.squaredLength(v) < 0.00001 ? [0, -1, 0] : [0, 0, -1];

        var mv = new Float32Array(16);
        mat4.lookAt(mv, cameraPosition, target, up);

        var s = new Float32Array(16);
        mat4.fromScaling(s, [1, -1, 1]);
        mat4.mul(mv, s, mv);

        gl.uniformMatrix4fv(modelViewMatrixLocation, false, mv);

        var p = new Float32Array(16);
        mat4.perspective(p, fov, aspect, 1, 11000);
        gl.uniformMatrix4fv(projectionMatrixLocation, false, p);

        // Draw the rectangle.
        gl.drawArrays(gl.TRIANGLES, 0, 9 * 6);
    }

    function setColors(gl, value) {

        gl.bufferData(
            gl.ARRAY_BUFFER,
            new Uint8Array(tileData.colors),
            gl.STATIC_DRAW);
    }

    // Fill the buffer with the values that define a rectangle.
    function setTiles(gl) {
        gl.bufferData(
            gl.ARRAY_BUFFER,
            new Float32Array(tileData.positions),
            gl.STATIC_DRAW);
    }

    drawScene()
}
},{"./data/tiledata.js":1}]},{},[2])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsImphdmFzY3JpcHQvZGF0YS90aWxlZGF0YS5qcyIsImphdmFzY3JpcHQvbG9va2F0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN4SUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICAncG9zaXRpb25zJzogW1xuICAgICAgICAvLyBSb3cgMVxuICAgICAgICAtOTAwLCAtOTAwLCAwLFxuICAgICAgICAtMzAwLCAtOTAwLCAwLFxuICAgICAgICAtOTAwLCAtMzAwLCAwLFxuICAgICAgICAtOTAwLCAtMzAwLCAwLFxuICAgICAgICAtMzAwLCAtOTAwLCAwLFxuICAgICAgICAtMzAwLCAtMzAwLCAwLFxuXG4gICAgICAgIC0zMDAsIC05MDAsIDAsXG4gICAgICAgIDMwMCwgLTkwMCwgMCxcbiAgICAgICAgLTMwMCwgLTMwMCwgMCxcbiAgICAgICAgLTMwMCwgLTMwMCwgMCxcbiAgICAgICAgMzAwLCAtOTAwLCAwLFxuICAgICAgICAzMDAsIC0zMDAsIDAsXG5cbiAgICAgICAgMzAwLCAtOTAwLCAwLFxuICAgICAgICA5MDAsIC05MDAsIDAsXG4gICAgICAgIDMwMCwgLTMwMCwgMCxcbiAgICAgICAgMzAwLCAtMzAwLCAwLFxuICAgICAgICA5MDAsIC05MDAsIDAsXG4gICAgICAgIDkwMCwgLTMwMCwgMCxcblxuICAgICAgICAvLyBSb3cgMlxuICAgICAgICAtOTAwLCAtMzAwLCAwLFxuICAgICAgICAtMzAwLCAtMzAwLCAwLFxuICAgICAgICAtOTAwLCAzMDAsIDAsXG4gICAgICAgIC05MDAsIDMwMCwgMCxcbiAgICAgICAgLTMwMCwgLTMwMCwgMCxcbiAgICAgICAgLTMwMCwgMzAwLCAwLFxuXG4gICAgICAgIC0zMDAsIC0zMDAsIDAsXG4gICAgICAgIDMwMCwgLTMwMCwgMCxcbiAgICAgICAgLTMwMCwgMzAwLCAwLFxuICAgICAgICAtMzAwLCAzMDAsIDAsXG4gICAgICAgIDMwMCwgLTMwMCwgMCxcbiAgICAgICAgMzAwLCAzMDAsIDAsXG5cbiAgICAgICAgMzAwLCAtMzAwLCAwLFxuICAgICAgICA5MDAsIC0zMDAsIDAsXG4gICAgICAgIDMwMCwgMzAwLCAwLFxuICAgICAgICAzMDAsIDMwMCwgMCxcbiAgICAgICAgOTAwLCAtMzAwLCAwLFxuICAgICAgICA5MDAsIDMwMCwgMCxcblxuICAgICAgICAvLyBSb3cgM1xuICAgICAgICAtOTAwLCAzMDAsIDAsXG4gICAgICAgIC0zMDAsIDMwMCwgMCxcbiAgICAgICAgLTkwMCwgOTAwLCAwLFxuICAgICAgICAtOTAwLCA5MDAsIDAsXG4gICAgICAgIC0zMDAsIDMwMCwgMCxcbiAgICAgICAgLTMwMCwgOTAwLCAwLFxuXG4gICAgICAgIC0zMDAsIDMwMCwgMCxcbiAgICAgICAgMzAwLCAzMDAsIDAsXG4gICAgICAgIC0zMDAsIDkwMCwgMCxcbiAgICAgICAgLTMwMCwgOTAwLCAwLFxuICAgICAgICAzMDAsIDMwMCwgMCxcbiAgICAgICAgMzAwLCA5MDAsIDAsXG5cbiAgICAgICAgMzAwLCAzMDAsIDAsXG4gICAgICAgIDkwMCwgMzAwLCAwLFxuICAgICAgICAzMDAsIDkwMCwgMCxcbiAgICAgICAgMzAwLCA5MDAsIDAsXG4gICAgICAgIDkwMCwgMzAwLCAwLFxuICAgICAgICA5MDAsIDkwMCwgMF0sXG5cbiAgICAnY29sb3JzJzogW1xuICAgICAgICAvLyBSb3cgMVxuICAgICAgICAxMCwgMTAsIDEwLFxuICAgICAgICAxMCwgMTAsIDEwLFxuICAgICAgICAxMCwgMTAsIDEwLFxuICAgICAgICAxMCwgMTAsIDEwLFxuICAgICAgICAxMCwgMTAsIDEwLFxuICAgICAgICAxMCwgMTAsIDEwLFxuXG4gICAgICAgIDQwLCA0MCwgNDAsXG4gICAgICAgIDQwLCA0MCwgNDAsXG4gICAgICAgIDQwLCA0MCwgNDAsXG4gICAgICAgIDQwLCA0MCwgNDAsXG4gICAgICAgIDQwLCA0MCwgNDAsXG4gICAgICAgIDQwLCA0MCwgNDAsXG5cbiAgICAgICAgNzAsIDcwLCA3MCxcbiAgICAgICAgNzAsIDcwLCA3MCxcbiAgICAgICAgNzAsIDcwLCA3MCxcbiAgICAgICAgNzAsIDcwLCA3MCxcbiAgICAgICAgNzAsIDcwLCA3MCxcbiAgICAgICAgNzAsIDcwLCA3MCxcblxuICAgICAgICAvLyBSb3cgMlxuICAgICAgICAxMDAsIDEwMCwgMTAwLFxuICAgICAgICAxMDAsIDEwMCwgMTAwLFxuICAgICAgICAxMDAsIDEwMCwgMTAwLFxuICAgICAgICAxMDAsIDEwMCwgMTAwLFxuICAgICAgICAxMDAsIDEwMCwgMTAwLFxuICAgICAgICAxMDAsIDEwMCwgMTAwLFxuXG4gICAgICAgIDEzMCwgMTMwLCAxMzAsXG4gICAgICAgIDEzMCwgMTMwLCAxMzAsXG4gICAgICAgIDEzMCwgMTMwLCAxMzAsXG4gICAgICAgIDEzMCwgMTMwLCAxMzAsXG4gICAgICAgIDEzMCwgMTMwLCAxMzAsXG4gICAgICAgIDEzMCwgMTMwLCAxMzAsXG5cbiAgICAgICAgMTYwLCAxNjAsIDE2MCxcbiAgICAgICAgMTYwLCAxNjAsIDE2MCxcbiAgICAgICAgMTYwLCAxNjAsIDE2MCxcbiAgICAgICAgMTYwLCAxNjAsIDE2MCxcbiAgICAgICAgMTYwLCAxNjAsIDE2MCxcbiAgICAgICAgMTYwLCAxNjAsIDE2MCxcblxuICAgICAgICAvLyBSb3cgM1xuICAgICAgICAxOTAsIDE5MCwgMTkwLFxuICAgICAgICAxOTAsIDE5MCwgMTkwLFxuICAgICAgICAxOTAsIDE5MCwgMTkwLFxuICAgICAgICAxOTAsIDE5MCwgMTkwLFxuICAgICAgICAxOTAsIDE5MCwgMTkwLFxuICAgICAgICAxOTAsIDE5MCwgMTkwLFxuXG4gICAgICAgIDIyMCwgMjIwLCAyMjAsXG4gICAgICAgIDIyMCwgMjIwLCAyMjAsXG4gICAgICAgIDIyMCwgMjIwLCAyMjAsXG4gICAgICAgIDIyMCwgMjIwLCAyMjAsXG4gICAgICAgIDIyMCwgMjIwLCAyMjAsXG4gICAgICAgIDIyMCwgMjIwLCAyMjAsXG5cbiAgICAgICAgMjUwLCAyNTAsIDI1MCxcbiAgICAgICAgMjUwLCAyNTAsIDI1MCxcbiAgICAgICAgMjUwLCAyNTAsIDI1MCxcbiAgICAgICAgMjUwLCAyNTAsIDI1MCxcbiAgICAgICAgMjUwLCAyNTAsIDI1MCxcbiAgICAgICAgMjUwLCAyNTAsIDI1MF1cbn07IiwiXCJ1c2Ugc3RyaWN0XCJcblxudmFyIHRpbGVEYXRhID0gcmVxdWlyZSgnLi9kYXRhL3RpbGVkYXRhLmpzJyk7XG5cbiQoZnVuY3Rpb24gKCkge1xuICAgIG1haW4oKTtcbn0pO1xuXG52YXIgbWFpbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAvLyBHZXQgQSBXZWJHTCBjb250ZXh0ICAgIC8vIEdldCBBIFdiR0wgY29udGV4dFxuICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKTtcbiAgICB2YXIgZ2wgPSBnZXRXZWJHTENvbnRleHQoY2FudmFzKTtcbiAgICBpZiAoIWdsKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBzZXR1cCBHTFNMIHByb2dyYW1cbiAgICB2YXIgcHJvZ3JhbSA9IGNyZWF0ZVByb2dyYW1Gcm9tU2NyaXB0cyhnbCwgW1wiMmQtdmVydGV4LXNoYWRlclwiLCBcIjJkLWZyYWdtZW50LXNoYWRlclwiXSk7XG4gICAgZ2wudXNlUHJvZ3JhbShwcm9ncmFtKTtcblxuICAgIC8vIGxvb2sgdXAgd2hlcmUgdGhlIHZlcnRleCBkYXRhIG5lZWRzIHRvIGdvLlxuICAgIHZhciBwb3NpdGlvbkxvY2F0aW9uID0gZ2wuZ2V0QXR0cmliTG9jYXRpb24ocHJvZ3JhbSwgXCJhX3Bvc2l0aW9uXCIpO1xuICAgIHZhciBjb2xvckxvY2F0aW9uID0gZ2wuZ2V0QXR0cmliTG9jYXRpb24ocHJvZ3JhbSwgXCJhX2NvbG9yXCIpO1xuXG4gICAgLy8gbG9va3VwIHVuaWZvcm1zXG4gICAgdmFyIG1vZGVsVmlld01hdHJpeExvY2F0aW9uID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHByb2dyYW0sIFwidV9tb2RlbFZpZXdNYXRyaXhcIik7XG4gICAgdmFyIHByb2plY3Rpb25NYXRyaXhMb2NhdGlvbiA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcm9ncmFtLCBcInVfcHJvamVjdGlvbk1hdHJpeFwiKTtcblxuICAgIC8vIENyZWF0ZSBhIGJ1ZmZlci5cbiAgICB2YXIgYnVmZmVyID0gZ2wuY3JlYXRlQnVmZmVyKCk7XG4gICAgZ2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsIGJ1ZmZlcik7XG4gICAgZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkocG9zaXRpb25Mb2NhdGlvbik7XG4gICAgZ2wudmVydGV4QXR0cmliUG9pbnRlcihwb3NpdGlvbkxvY2F0aW9uLCAzLCBnbC5GTE9BVCwgZmFsc2UsIDAsIDApO1xuXG4gICAgc2V0VGlsZXMoZ2wpO1xuXG4gICAgLy8gQ3JlYXRlIGEgYnVmZmVyIGZvciBjb2xvcnMuXG4gICAgdmFyIGJ1ZmZlciA9IGdsLmNyZWF0ZUJ1ZmZlcigpO1xuICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCBidWZmZXIpO1xuICAgIGdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KGNvbG9yTG9jYXRpb24pO1xuICAgIGdsLnZlcnRleEF0dHJpYlBvaW50ZXIoY29sb3JMb2NhdGlvbiwgMywgZ2wuVU5TSUdORURfQllURSwgdHJ1ZSwgMCwgMCk7XG5cbiAgICAvLyBTZXQgQ29sb3JzLlxuICAgIHNldENvbG9ycyhnbCk7XG5cbiAgICB2YXIgZm92ID0gTWF0aC5QSSAvIDM7XG4gICAgdmFyIGNhbWVyYVBvc2l0aW9uID0gWzAsIDAsIDEwMDBdO1xuICAgIHZhciB0YXJnZXQgPSBbMCwgMCwgMF07XG5cbiAgICAvLyBTZXR1cCBhIHVpLlxuICAgICQoXCIjZm92XCIpLmdtYW5TbGlkZXIoeyB2YWx1ZTogcmFkVG9EZWcoZm92KSwgc2xpZGU6IHVwZGF0ZUZvdiwgbWluOiAxLCBtYXg6IDE3OSB9KTtcblxuICAgICQoXCIjY2FtZXJhUG9zaXRpb25YXCIpLmdtYW5TbGlkZXIoeyB2YWx1ZTogY2FtZXJhUG9zaXRpb25bMF0sIHNsaWRlOiB1cGRhdGVDYW1lcmFQb3NpdGlvbigwKSwgbWluOiAtMTAwMCwgbWF4OiAxMDAwIH0pO1xuICAgICQoXCIjY2FtZXJhUG9zaXRpb25ZXCIpLmdtYW5TbGlkZXIoeyB2YWx1ZTogY2FtZXJhUG9zaXRpb25bMV0sIHNsaWRlOiB1cGRhdGVDYW1lcmFQb3NpdGlvbigxKSwgbWluOiAtMTAwMCwgbWF4OiAxMDAwIH0pO1xuICAgICQoXCIjY2FtZXJhUG9zaXRpb25aXCIpLmdtYW5TbGlkZXIoeyB2YWx1ZTogY2FtZXJhUG9zaXRpb25bMl0sIHNsaWRlOiB1cGRhdGVDYW1lcmFQb3NpdGlvbigyKSwgbWluOiAtMTAwMCwgbWF4OiAxMDAwIH0pO1xuXG4gICAgJChcIiN0YXJnZXRYXCIpLmdtYW5TbGlkZXIoeyB2YWx1ZTogdGFyZ2V0WzBdLCBzbGlkZTogdXBkYXRlVGFyZ2V0KDApLCBtaW46IC0xMDAwLCBtYXg6IDEwMDAgfSk7XG4gICAgJChcIiN0YXJnZXRZXCIpLmdtYW5TbGlkZXIoeyB2YWx1ZTogdGFyZ2V0WzFdLCBzbGlkZTogdXBkYXRlVGFyZ2V0KDEpLCBtaW46IC0xMDAwLCBtYXg6IDEwMDAgfSk7XG4gICAgJChcIiN0YXJnZXRaXCIpLmdtYW5TbGlkZXIoeyB2YWx1ZTogdGFyZ2V0WzJdLCBzbGlkZTogdXBkYXRlVGFyZ2V0KDIpLCBtaW46IC0xMDAwLCBtYXg6IDEwMDAgfSk7XG5cbiAgICBmdW5jdGlvbiB1cGRhdGVGb3YoZXZlbnQsIHVpKSB7XG4gICAgICAgIGZvdiA9IGRlZ1RvUmFkKHVpLnZhbHVlKTtcbiAgICAgICAgZHJhd1NjZW5lKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXBkYXRlQ2FtZXJhUG9zaXRpb24oaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCwgdWkpIHtcbiAgICAgICAgICAgIGNhbWVyYVBvc2l0aW9uW2luZGV4XSA9IHVpLnZhbHVlO1xuICAgICAgICAgICAgZHJhd1NjZW5lKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiB1cGRhdGVUYXJnZXQoaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCwgdWkpIHtcbiAgICAgICAgICAgIHRhcmdldFtpbmRleF0gPSB1aS52YWx1ZTtcbiAgICAgICAgICAgIGRyYXdTY2VuZSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmFkVG9EZWcocikge1xuICAgICAgICByZXR1cm4gciAqIDE4MCAvIE1hdGguUEk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZGVnVG9SYWQoZCkge1xuICAgICAgICByZXR1cm4gZCAqIE1hdGguUEkgLyAxODA7XG4gICAgfVxuXG4gICAgLy8gRHJhdyBhIHRoZSBzY2VuZS5cbiAgICBmdW5jdGlvbiBkcmF3U2NlbmUoKSB7XG4gICAgICAgIC8vIENsZWFyIHRoZSBjYW52YXMuXG4gICAgICAgIGdsLmNsZWFyKGdsLkNPTE9SX0JVRkZFUl9CSVQpO1xuXG4gICAgICAgIHZhciBhc3BlY3QgPSBjYW52YXMuY2xpZW50V2lkdGggLyBjYW52YXMuY2xpZW50SGVpZ2h0O1xuXG4gICAgICAgIHZhciB2ID0gbmV3IEZsb2F0MzJBcnJheSgzKTtcbiAgICAgICAgdmVjMy5zdWJ0cmFjdCh2LCB0YXJnZXQsIGNhbWVyYVBvc2l0aW9uKTtcbiAgICAgICAgdmVjMy5jcm9zcyh2LCB2LCBbMCwgMCwgMV0pO1xuXG4gICAgICAgIHZhciB1cCA9IHZlYzMuc3F1YXJlZExlbmd0aCh2KSA8IDAuMDAwMDEgPyBbMCwgLTEsIDBdIDogWzAsIDAsIC0xXTtcblxuICAgICAgICB2YXIgbXYgPSBuZXcgRmxvYXQzMkFycmF5KDE2KTtcbiAgICAgICAgbWF0NC5sb29rQXQobXYsIGNhbWVyYVBvc2l0aW9uLCB0YXJnZXQsIHVwKTtcblxuICAgICAgICB2YXIgcyA9IG5ldyBGbG9hdDMyQXJyYXkoMTYpO1xuICAgICAgICBtYXQ0LmZyb21TY2FsaW5nKHMsIFsxLCAtMSwgMV0pO1xuICAgICAgICBtYXQ0Lm11bChtdiwgcywgbXYpO1xuXG4gICAgICAgIGdsLnVuaWZvcm1NYXRyaXg0ZnYobW9kZWxWaWV3TWF0cml4TG9jYXRpb24sIGZhbHNlLCBtdik7XG5cbiAgICAgICAgdmFyIHAgPSBuZXcgRmxvYXQzMkFycmF5KDE2KTtcbiAgICAgICAgbWF0NC5wZXJzcGVjdGl2ZShwLCBmb3YsIGFzcGVjdCwgMSwgMTEwMDApO1xuICAgICAgICBnbC51bmlmb3JtTWF0cml4NGZ2KHByb2plY3Rpb25NYXRyaXhMb2NhdGlvbiwgZmFsc2UsIHApO1xuXG4gICAgICAgIC8vIERyYXcgdGhlIHJlY3RhbmdsZS5cbiAgICAgICAgZ2wuZHJhd0FycmF5cyhnbC5UUklBTkdMRVMsIDAsIDkgKiA2KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXRDb2xvcnMoZ2wsIHZhbHVlKSB7XG5cbiAgICAgICAgZ2wuYnVmZmVyRGF0YShcbiAgICAgICAgICAgIGdsLkFSUkFZX0JVRkZFUixcbiAgICAgICAgICAgIG5ldyBVaW50OEFycmF5KHRpbGVEYXRhLmNvbG9ycyksXG4gICAgICAgICAgICBnbC5TVEFUSUNfRFJBVyk7XG4gICAgfVxuXG4gICAgLy8gRmlsbCB0aGUgYnVmZmVyIHdpdGggdGhlIHZhbHVlcyB0aGF0IGRlZmluZSBhIHJlY3RhbmdsZS5cbiAgICBmdW5jdGlvbiBzZXRUaWxlcyhnbCkge1xuICAgICAgICBnbC5idWZmZXJEYXRhKFxuICAgICAgICAgICAgZ2wuQVJSQVlfQlVGRkVSLFxuICAgICAgICAgICAgbmV3IEZsb2F0MzJBcnJheSh0aWxlRGF0YS5wb3NpdGlvbnMpLFxuICAgICAgICAgICAgZ2wuU1RBVElDX0RSQVcpO1xuICAgIH1cblxuICAgIGRyYXdTY2VuZSgpXG59Il19
